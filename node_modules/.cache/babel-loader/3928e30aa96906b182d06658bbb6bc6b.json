{"ast":null,"code":"var _jsxFileName = \"H:\\\\React\\\\AlgoBook\\\\src\\\\components\\\\SortComponent.js\";\nimport React from 'react';\nvar i1 = 0,\n    j1 = 0;\nconst ar = [65, 59, 80, 81, 56, 55, 40, 85, 24, 77, 33, 40];\nvar data1 = ar.map(x => {\n  return {\n    label: 'ar[i]',\n    backgroundColor: 'rgb(77, 121, 255)',\n    hoverBackgroundColor: 'rgb(77, 121, 255)',\n    borderColor: 'black',\n    borderWidth: 1,\n    data: [x]\n  };\n});\nconst data2 = {\n  datasets: data1\n}; //console.log(data2.datasets);\n\nclass Sort extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      i: 0,\n      j: 0,\n      finished: ar.length,\n      data: data2,\n      start: 0\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.state.data.datasets);\n  }\n\n  bubbleSort() {\n    let n = ar.length; //        n--;\n\n    for (; i1 < n - 1; i1++) {\n      for (; j1 < n - 1 - i1; j1++) {\n        setTimeout(() => {\n          let x = this.state.data;\n          x.datasets[j1].backgroundColor = 'yellow';\n          x.datasets[j1].hoverBackgroundColor = 'yellow';\n          x.datasets[j1 + 1].backgroundColor = 'yellow';\n          x.datasets[j1 + 1].hoverBackgroundColor = 'yellow';\n\n          if (j1 > 0) {\n            x.datasets[j1 - 1].backgroundColor = 'rgb(77, 121, 255)';\n            x.datasets[j1 - 1].hoverBackgroundColor = 'rgb(77, 121, 255)';\n          }\n\n          this.setState(prev => ({\n            data: x,\n            start: 1\n          }));\n        }, j1 * 1000); //                if(ar[i1]>ar[i1+1])\n        //                {\n        //                    let t=ar[i1];\n        //                    ar[i1]=ar[i1+1];\n        //                    ar[i1+1]=t;\n        //                }\n      }\n\n      j1 = 0;\n    }\n  }\n\n  bubbleSort1() {\n    let n = ar.length;\n\n    for (let i = 0; i < n; i++) {\n      setTimeout(() => {\n        let x = this.state.data;\n        x.datasets[i].backgroundColor = 'yellow';\n        x.datasets[i].hoverBackgroundColor = 'yellow';\n        this.setState({\n          data: x,\n          start: 1\n        });\n      }, 1000);\n    }\n  }\n\n  render() {\n    let str = this.state.start === 1 ? React.createElement(\"button\", {\n      onClick: this.bubbleSort1(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Start\") : React.createElement(\"button\", {\n      onClick: () => this.bubbleSort1(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Start\");\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Bubble Sort\"), React.createElement(Bar, {\n      data: this.state.data,\n      width: 100,\n      height: 250,\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            display: true,\n            gridLines: {\n              display: false\n            }\n          }],\n          yAxes: [{\n            display: false\n          }]\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), str);\n  }\n\n}\n\n;\nexport default Sort;","map":{"version":3,"sources":["H:/React/AlgoBook/src/components/SortComponent.js"],"names":["React","i1","j1","ar","data1","map","x","label","backgroundColor","hoverBackgroundColor","borderColor","borderWidth","data","data2","datasets","Sort","Component","constructor","props","state","i","j","finished","length","start","componentDidMount","console","log","bubbleSort","n","setTimeout","setState","prev","bubbleSort1","render","str","maintainAspectRatio","scales","xAxes","display","gridLines","yAxes"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n\r\nvar i1=0,j1=0;\r\nconst ar=[65, 59, 80, 81, 56, 55, 40,85,24,77,33,40];\r\nvar data1=ar.map((x)=>{\r\n    return({\r\n      label: 'ar[i]',\r\n      backgroundColor: 'rgb(77, 121, 255)',\r\n      hoverBackgroundColor:'rgb(77, 121, 255)',\r\n      borderColor: 'black',\r\n      borderWidth:1,\r\n      data: [x]\r\n    })\r\n})\r\nconst data2 = {\r\n  datasets: data1\r\n};\r\n//console.log(data2.datasets);\r\nclass Sort extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             i:0,\r\n             j:0,\r\n             finished:ar.length,\r\n             data:data2,\r\n             start:0\r\n        }\r\n    }\r\n    componentDidMount(){\r\n      console.log(this.state.data.datasets);\r\n    }\r\n\r\n    bubbleSort(){\r\n        let n=ar.length;\r\n//        n--;\r\n        for(;i1<n-1;i1++)\r\n        {\r\n            for(;j1<n-1-i1;j1++)\r\n            {\r\n                setTimeout(() => {\r\n                    let x=this.state.data;\r\n                    x.datasets[j1].backgroundColor='yellow';\r\n                    x.datasets[j1].hoverBackgroundColor='yellow';\r\n                    x.datasets[j1+1].backgroundColor='yellow';\r\n                    x.datasets[j1+1].hoverBackgroundColor='yellow';\r\n                    if(j1>0){\r\n                        x.datasets[j1-1].backgroundColor='rgb(77, 121, 255)';\r\n                        x.datasets[j1-1].hoverBackgroundColor='rgb(77, 121, 255)';\r\n                    }\r\n                    this.setState(prev=>({\r\n                        data:x,\r\n                        start:1\r\n                    })\r\n                )},j1* 1000)\r\n//                if(ar[i1]>ar[i1+1])\r\n//                {\r\n//                    let t=ar[i1];\r\n//                    ar[i1]=ar[i1+1];\r\n//                    ar[i1+1]=t;\r\n//                }\r\n            }\r\n            j1=0;\r\n        }\r\n    }\r\n    bubbleSort1(){\r\n      let n=ar.length;\r\n      for(let i=0;i<n;i++)\r\n      {\r\n        setTimeout(() => {\r\n          let x=this.state.data;\r\n          x.datasets[i].backgroundColor='yellow';\r\n          x.datasets[i].hoverBackgroundColor='yellow';\r\n          this.setState({\r\n            data:x,\r\n            start:1\r\n          })\r\n        }, 1000);\r\n      }\r\n    }\r\n\r\n  render() {\r\n      let str=this.state.start===1? <button onClick={this.bubbleSort1()}>Start</button> : <button onClick={()=>this.bubbleSort1()}>Start</button>\r\n    return (\r\n      <div>\r\n        <h2>Bubble Sort</h2>\r\n        <Bar\r\n          data={this.state.data}\r\n          width={100}\r\n          height={250}\r\n          options={{\r\n            maintainAspectRatio: false,\r\n            scales: {\r\n                xAxes: [{display: true,gridLines:{display:false}}],\r\n                yAxes:[{display:false}]\r\n            }\r\n          }}\r\n        />\r\n        {str}\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Sort;"]},"metadata":{},"sourceType":"module"}