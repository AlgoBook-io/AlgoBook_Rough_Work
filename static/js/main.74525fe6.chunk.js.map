{"version":3,"sources":["components/linear.js","components/linear_parent.js","components/binary.js","components/Binary_parent.js","components/Search.js","components/HomeComponent.js","components/SortComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Linear","ui","this","props","ar","map","x","index","srch","key","className","onLoad","check","Component","arr","n","length","LinearParent","setState","flag","searchElementChange","event","search","target","value","state","start","steps","nextProps","nextState","setTimeout","prev","forceUpdate","str","style","padding","onClick","linearSearch","type","onChange","reset","id","Binary","mid","Math","floor","l","r","BinaryParent","console","log","parseInt","binarySearch","Search","HomeComponent","borderLeft","borderRight","width","height","src","alt","fontFamily","to","color","backgroundColor","bubblectr","sorted","color1","timeouts","skip","randomIntFromInterval","min","max","random","BubbleSort","delay","resetArray","bind","changeArrSize","document","getElementById","disabled","i","getElementsByClassName","sort","a","b","array","push","arr_bar","transform","dly","wdth","window","innerWidth","n1","val","clearTimeout","buttons","animations","j","swap","t","resetCSS","BubbleSortAnimations","ptr","ctr","len","idx1","idx2","qq","y","tm","minpos","temp","selectionSortAnimations","previdx","insertionSortAnimations","animation","mergeSort1","merge","k","i1","j1","tmp","z","mergeSortAnimations","pq","pqq","it","quickSort1","low","high","par","partition","pivot","quickSortAnimations","strdly","maxn","toString","ctr1","transition","bubbleSort","selectionSort","insertionSort","mergeSort","quickSort","skipAnimations","defaultValue","borderRadius","changeDelay","MainComponent","path","component","Sort","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74525fe6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './myStyle.css';\r\n\r\nclass Linear extends Component {\r\n    render(){\r\n        const ui=this.props.ar.map((x,index)=>\r\n        {\r\n            if(this.props.index===index)\r\n            {\r\n                if(this.props.ar[this.props.index]!==this.props.srch)\r\n                return(<div key={index} className=\"def red col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else\r\n                {\r\n                    return(<div key={index} className=\"def green col-2 col-sm-2 col-md-1\" onLoad={this.props.check()}>{x}</div>);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(index<this.props.index)\r\n                return(<div key={index} className=\"def q col-2 col-sm-2 col-md-1\">{x}</div>);\r\n                else\r\n                return(<div key={index} className=\"def inrange col-2 col-sm-2 col-md-1\">{x}</div>);\r\n            }\r\n        });\r\n        return (\r\n            <center>\r\n            <div className=\"mystl container\">\r\n                <div className=\"row\">\r\n                    {ui}\r\n                </div>\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Linear","import React, { Component } from 'react'\r\nimport Linear from './linear';\r\nimport './myStyle.css';\r\n\r\nlet arr=['372','5','4','1','6','7','54','6','32','8765','99'];\r\nconst n=arr.length;\r\nclass LinearParent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n             index:0,\r\n             start:0,\r\n             flag:false,\r\n             search:'',\r\n             steps:' '\r\n        }\r\n    }\r\n    check=()=>{\r\n        this.setState({\r\n            flag:true\r\n        });\r\n    }\r\n\r\n\r\n    shouldComponentUpdate(nextProps,nextState){\r\n        if(this.state.flag)\r\n        return false;\r\n        return true;\r\n    }\r\n\r\n    linearSearch(){\r\n        if(this.state.search==='')\r\n        return;\r\n        if(this.state.index===n-1)\r\n        {\r\n            if(arr[n-1]!==this.state.search)\r\n            this.setState({\r\n                steps:\"Search element not present in array\",\r\n                start:0\r\n            })\r\n            else{\r\n                this.setState({\r\n                    steps:`Search element present at position ${n-1}`,\r\n                    start:0\r\n                })\r\n            }\r\n            return;\r\n        }\r\n        if(this.state.flag===true)\r\n        {\r\n            this.setState((prev)=>({\r\n                steps:`Search element found at position ${prev.index}`,\r\n                start:0\r\n            }),function(){\r\n                this.forceUpdate();\r\n            })\r\n            return;\r\n        }\r\n        setTimeout(() => {\r\n            this.setState(prev=>({\r\n                index:prev.index+1,\r\n                start:1,\r\n//                steps:arr[prev.index]==prev.search && `Search element found at position: ${prev.index+1}`\r\n            }))\r\n        }, 200);\r\n    }\r\n    reset(){\r\n        this.setState({\r\n            flag:false,\r\n            index: 0,\r\n            start:0,\r\n            search:'',\r\n            steps:' '\r\n            },function(){\r\n            this.forceUpdate()\r\n        });\r\n    }\r\n\r\n    searchElementChange=(event)=>{\r\n        this.setState({\r\n            search:event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        let str=this.state.start===1? <button className=\"button button4\" style={{padding:'5px 14px'}} onClick={this.linearSearch()}>Run</button> : <button className=\"button button4\" style={{padding:'5px 14px'}} onClick={()=>this.linearSearch()}>Run</button>\r\n        return (\r\n            <div>\r\n                <Linear ar={arr} index={this.state.index} srch={this.state.search} check={this.check}/>\r\n                <br/><br/>\r\n                <label>Enter Search Element</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type='text' value={this.state.search} onChange={this.searchElementChange} className='txt txt2'></input>\r\n                <br/>\r\n                {str}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button className=\"button button4\" type='submit' style={{padding:'5px 14px'}} onClick={()=>this.reset()}>Reset</button>\r\n                <div id=\"steps\">{this.state.steps}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nfunction randomIntFromInterval(min, max){\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport default LinearParent","import React, { Component } from 'react'\r\nimport './myStyle.css';\r\n\r\nclass Binary extends Component {\r\n    render() {\r\n        let mid=Math.floor((this.props.l+this.props.r)/2);\r\n        const {l,r,ar,srch}=this.props;\r\n        const ui=ar.map((x,index)=>{\r\n            if(mid===index)\r\n            {\r\n                if(ar[mid]===srch)\r\n                    return(<div key={index} className=\"def green col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else\r\n                    return(<div key={index} className=\"def red col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n            }\r\n            else\r\n            {\r\n                if(index===l)\r\n                return(<div key={index} className=\"def lblue col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else if(index===r)\r\n                return(<div key={index} className=\"def lblue col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else if(index>l&&index<r)\r\n                return(<div key={index} className=\"def inrange col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n                else\r\n                return(<div key={index} className=\"def q col-2 col-sm-2 col-md-1 align-self-center\">{x}</div>);\r\n            }\r\n        });\r\n        return (\r\n            <center>\r\n            <div className=\"mystl container\">\r\n                <div className=\"row\">\r\n                    {ui}\r\n                </div>\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Binary","import React, { Component } from 'react'\r\nimport Binary from './binary';\r\nimport './myStyle.css';\r\nconst ar=['-4','5','53','66','96','100','200','326','646','777','932'];\r\nconst n=ar.length;\r\n\r\n\r\nclass BinaryParent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n             l:0,\r\n             r:n-1,\r\n             start:0,\r\n             search:'',\r\n             flag:false,\r\n             steps:' '\r\n        }\r\n    }\r\n    \r\n    check=()=>{\r\n        this.setState({\r\n            flag:true\r\n        })\r\n    }\r\n    shouldComponentUpdate(nextProps,nextState){\r\n            if(this.state.flag)\r\n            return false;\r\n            return true;\r\n    }\r\n\r\n    reset=()=>{\r\n        this.setState({\r\n             l:0,\r\n             r:n-1,\r\n             start:0,\r\n             search:'',\r\n             flag:false,\r\n             steps:' '\r\n        },function(){\r\n            this.forceUpdate()\r\n        })\r\n    }\r\n\r\n    binarySearch(){\r\n        if(this.state.search==='')\r\n        return;\r\n        if(this.state.l>this.state.r)\r\n        {\r\n            this.setState({\r\n                steps:'Search element not present in array',\r\n                start:0\r\n            },function(){\r\n                this.forceUpdate();\r\n            })\r\n            return;\r\n        }\r\n        if(this.state.flag===true)\r\n        return;\r\n        setTimeout(() => {\r\n            let mid=Math.floor((this.state.l+this.state.r)/2);\r\n            console.log(this.state.search+\" \"+ar[mid]);\r\n            if(parseInt(this.state.search)>parseInt(ar[mid]))\r\n            {\r\n                this.setState(prev=>({\r\n                    l:mid+1,\r\n                    start:1,\r\n//                    steps:'l= '+this.state.l+' r= '+this.state.r+' mid= '+mid+' x > ar[mid]'\r\n                }),function(){\r\n                    console.log(\"D \"+this.state.l);\r\n                })\r\n            }\r\n            else if(parseInt(this.state.search)<parseInt(ar[mid])){\r\n                this.setState(prev=>({\r\n                    r:mid-1,\r\n                    start:1,\r\n//                    steps:`l= ${this.state.l} r= ${this.state.r} mid= ${mid} x < ar[mid]`\r\n                }),function(){\r\n                    console.log(\"S \"+this.state.r);\r\n                })\r\n            }\r\n            else\r\n            {\r\n                this.setState(prev=>({\r\n                    flag:true,\r\n                    start:0,\r\n                    steps:`Search element found at position ${mid}`\r\n                }))\r\n            }\r\n        }, 1500);\r\n    }\r\n\r\n    searchElementChange=(event)=>{\r\n        this.setState({\r\n            search:event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let str=this.state.start===1? <button className=\"button button4\" style={{padding:'5px 14px'}} onClick={this.binarySearch()}>Run</button> : <button className=\"button button4\" style={{padding:'5px 14px'}} onClick={()=>this.binarySearch()}>Run</button>\r\n        return (\r\n            <center>\r\n            <div>\r\n                <Binary l={this.state.l} r={this.state.r} ar={ar} srch={this.state.search} check={this.state.check} />\r\n                <br/><br/>\r\n                <label>Enter Search Element</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <input type='text' value={this.state.search} onChange={this.searchElementChange} className='txt txt2'></input>\r\n                <br/>\r\n                {str}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button className=\"button button4\" type='submit' style={{padding:'5px 14px'}} onClick={()=>this.reset()}>Reset</button>\r\n                <div id=\"steps\">{this.state.steps}</div>\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BinaryParent\r\n","import React, { Component } from 'react'\r\nimport LinearParent from './linear_parent';\r\nimport BinaryParent from './Binary_parent';\r\nimport './myStyle.css';\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <br/>\r\n                        <h1 className=\"mainHeading\">Linear Search</h1>\r\n                        <br/>\r\n                        <LinearParent/>\r\n                    </div>\r\n                </div>\r\n                <br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <br/>\r\n                        <h1 className=\"mainHeading\">Binary Search</h1>\r\n                        <br/>\r\n                        <BinaryParent/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React, { Component } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './myStyle.css'\r\n\r\nclass HomeComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{borderLeft:'1px outset black',borderRight:'1px groove black'}}>\r\n            <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <br/>\r\n                <h1 className=\"mainHeading\">Searching and Sorting Visualizer</h1>\r\n                <br/>\r\n            </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6\">\r\n                <center>\r\n                <div className=\"card insetHover\" style={{width: '22rem'}}>\r\n                <img className=\"card-img-top\" style={{height:'150px'}} src='https://www.tutorialspoint.com/data_structures_algorithms/images/linear_search.gif' alt=\"Searching image\"/>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title\" style={{fontFamily:'Georgia'}}><br/>Searching Visualizer</h3>\r\n                    <p style={{fontFamily: 'Georgia'}} className=\"card-text\">A simple simulation of Linear Search and Binary Search on an array of integers meant for understanding them better.</p>\r\n                    <center>\r\n                    <NavLink to='/Searching-Sorting-Visualizer/search' style={{width:'70%',color:'white',fontFamily:'Georgia'}} className=\"btn btn-primary\">Searching Algorithms</NavLink>\r\n                    </center>\r\n                </div>\r\n                </div>\r\n                </center>\r\n                </div>\r\n                <div className=\"col-12 col-md-6\">\r\n                <center>\r\n                <div className=\"card insetHover\" style={{width: '22rem'}}>\r\n                <img className=\"card-img-top\" src=\"https://thumbs.gfycat.com/ValuableAnyCoelacanth-size_restricted.gif\" alt=\"Sorting image\"/>\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"card-title\" style={{fontFamily:'Georgia'}}>Sorting Visualizer</h3>\r\n                    <p style={{fontFamily: 'Georgia'}} className=\"card-text\">Simulation of Bubble Sort, Selection Sort, Insertion Sort, Merge Sort and Quick Sort on randomly chosen data values.</p>\r\n                    <center>\r\n                    <NavLink to='/Searching-Sorting-Visualizer/sort' style={{width:'70%',color:'white',fontFamily:'Georgia'}} className=\"btn btn-primary\">Sorting Algorithms</NavLink>\r\n                    </center>\r\n                </div>\r\n                </div>\r\n                </center>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                <br/><br/><br/>\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 insetHover\" style={{backgroundColor:'#99ddff'}}>\r\n                        The application is aimed to help the users better understand Searching and Sorting algorithms by visualizing the steps and realizing how the algorithm actually works. The data is randomly generated and can be changed by the click of a button. The number of data items and the speed(inverse of the transition delay) is left for the user to choose according to his/her convenience. There are also options to skip the remaining animations. The application is still under development and new algorithms will be added soon.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomeComponent\r\n","import React, { Component } from 'react'\r\nimport './sort.css';\r\nimport './myStyle.css';\r\n//import {mergeSortAnimations} from './MergeSort'\r\nvar bubblectr=0;\r\nvar sorted=false;\r\nvar width=50;\r\nvar reset=true;\r\nvar color1='rgb(0, 204, 0)';\r\nvar timeouts=[]\r\nvar skip=false\r\n//var ctr1=0;\r\nclass BubbleSort extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             ar:[],\r\n             n:20,\r\n             delay:250\r\n        }\r\n        this.resetArray=this.resetArray.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.changeArrSize();\r\n        reset=true;\r\n        sorted=false;\r\n        document.getElementById('skip').disabled=true;\r\n    }\r\n    componentDidUpdate(){\r\n        if(skip===true)\r\n        {\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                const arr_bar=document.getElementsByClassName('array-bar');\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        }\r\n//        else console.log(\"ASDDF\");\r\n    }\r\n    resetCSS(){\r\n        let arr=this.state.ar;\r\n            arr.sort(function(a, b){return a - b});\r\n            this.setState({\r\n                ar:arr\r\n            })\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            const arr_bar=document.getElementsByClassName('array-bar');\r\n            arr_bar[i].style.backgroundColor='blue';\r\n        }\r\n    }\r\n\r\n    resetArray(){\r\n        reset=true;\r\n        sorted=false;\r\n\r\n        let array = [];\r\n        for (let i = 0; i < this.state.n; i++) {\r\n            array.push(randomIntFromInterval(5, 480));\r\n        }\r\n        array[randomIntFromInterval(0,this.state.n-1)]=480\r\n        this.setState({\r\n            ar:array\r\n        });\r\n        if(bubblectr===1)\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            const arr_bar=document.getElementsByClassName('array-bar');\r\n            arr_bar[i].style.transform='translateX(0px)';\r\n            arr_bar[i].style.backgroundColor='blue';\r\n        }\r\n        bubblectr=1;\r\n    }\r\n    \r\n    buttons(x,dly){\r\n        document.getElementById('reset').disabled=x;\r\n        document.getElementById('selectionsort').disabled=x;\r\n        document.getElementById('bubblesort').disabled=x;\r\n        document.getElementById('insertionsort').disabled=x;\r\n        document.getElementById('mergesort').disabled=x;\r\n        document.getElementById('quicksort').disabled=x;\r\n        document.getElementById('arr_size').disabled=x;\r\n        document.getElementById('delay').disabled=x;\r\n        document.getElementById('skip').disabled=!x;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        if(x===true)\r\n        {\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                arr_bar[i].style.transform='translateX(0px)';\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        }\r\n        else{\r\n            setTimeout(() => {\r\n                for(let i=0;i<this.state.n;i++)\r\n                {\r\n                    arr_bar[i].style.backgroundColor='blue';\r\n                }\r\n            }, 1000);\r\n        }\r\n        sorted= !x;\r\n    }\r\n\r\n    changeArrSize(){\r\n        var x=document.getElementById('arr_size');\r\n        bubblectr=0;\r\n        let wdth=.8*window.innerWidth;\r\n        let n1=Math.floor(x.value*3.6);\r\n//doubt about width formula\r\n        width=Math.floor(wdth/n1)-2;\r\n        this.setState({\r\n            n:n1\r\n        },function(){\r\n            this.resetArray();\r\n            const arr_bar=document.getElementsByClassName('array-bar');\r\n            if(typeof arr_bar==='undefined')\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        })\r\n    }\r\n\r\n    changeDelay(){\r\n        let x=document.getElementById('delay');\r\n        let val;\r\n        if(x.value>=1450)\r\n        val=.05;\r\n        else if(x.value>=1350)\r\n        val=.1;\r\n        else if(x.value>=1250)\r\n        val=.25;\r\n        else if(x.value>=1150)\r\n        val=.5;\r\n        else if(x.value>1000)\r\n        val=.75;\r\n        else val=1001-x.value;\r\n        this.setState({\r\n            delay:val\r\n        },function(){\r\n            if(sorted===true)\r\n            {\r\n                let arr=this.state.ar;\r\n                arr.sort(function(a, b){return a - b});\r\n                this.setState({\r\n                    ar:arr\r\n                })\r\n            }\r\n            for(let i=0;i<this.state.n;i++)\r\n            {\r\n                const arr_bar=document.getElementsByClassName('array-bar');\r\n                arr_bar[i].style.backgroundColor='blue';\r\n            }\r\n        })\r\n    }\r\n\r\n    skipAnimations(){\r\n        skip=true;\r\n        for(let i=0;i<timeouts.length;i++)\r\n        window.clearTimeout(timeouts[i]);\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            arr_bar[i].style.transform='translateX(0px)';\r\n        }\r\n        let arr=this.state.ar;\r\n        arr.sort(function(a, b){return a - b});\r\n        this.setState({\r\n            ar:arr\r\n        })\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            arr_bar[i].style.backgroundColor=color1;\r\n        }\r\n        this.buttons(false,800);\r\n        timeouts=[];\r\n        skip=false;\r\n    }\r\n\r\n    //Bubble Sort\r\n    BubbleSortAnimations(){\r\n        let animations=[];\r\n        let ar=this.state.ar;\r\n        for(let i=0;i<this.state.n-1;i++)\r\n        {\r\n            for(let j=0;j<this.state.n-1-i;j++)\r\n            {\r\n                if(ar[j]>ar[j+1])\r\n                {\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'red',\r\n                        swap:false\r\n                    })\r\n                    let t=ar[j];\r\n                    ar[j]=ar[j+1];\r\n                    ar[j+1]=t;\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'green',\r\n                        swap:true\r\n                    })\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'green',\r\n                        swap:false\r\n                    })\r\n                }\r\n                else{\r\n                    animations.push({\r\n                        i:j,\r\n                        j:j+1,\r\n                        color:'green',\r\n                        swap:false\r\n                    })\r\n                }\r\n            }\r\n            animations.push({\r\n                i:this.state.n-1-i,\r\n                j:-1,\r\n                color:'orange',\r\n                swap:false\r\n            })\r\n        }\r\n        animations.push({\r\n            i:0,\r\n            j:-1,\r\n            color:'orange',\r\n            swap:false\r\n        })\r\n        return animations;\r\n    }\r\n\r\n    bubbleSort()\r\n    {\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true,0);\r\n        const animations=this.BubbleSortAnimations();\r\n        let ptr=[];\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=color1;\r\n                    if(idx1>0 && arr_bar[ptr[idx1-1].i].style.backgroundColor==='palegreen')\r\n                    arr_bar[ptr[idx1-1].i].style.backgroundColor='blue';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq)\r\n                continue;\r\n            }\r\n            if(animations[i].swap===true)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                         ptr[idx1].ctr+=1;\r\n                         let y=ptr[idx1].ctr*(width+2);\r\n                         arr_bar[ptr[idx1].i].style.transform=`translateX(${y}px)`\r\n                         ptr[idx2].ctr-=1;\r\n                         y=ptr[idx2].ctr*(width+2);\r\n                         arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                         let tm=ptr[idx1];\r\n                         ptr[idx1]=ptr[idx2];\r\n                         ptr[idx2]=tm;\r\n                         arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                         arr_bar[ptr[idx2].i].style.backgroundColor='palegreen';\r\n                     }, i*this.state.delay);\r\n                     timeouts.push(qq);\r\n            }\r\n            else\r\n            {\r\n                if(animations[i].color==='green')\r\n                {\r\n                    let qq=setTimeout(() => {\r\n                        if(idx1>0&&arr_bar[ptr[idx1-1].i].style.backgroundColor==='palegreen')\r\n                        arr_bar[ptr[idx1-1].i].style.backgroundColor='blue';\r\n                        arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                        arr_bar[ptr[idx2].i].style.backgroundColor='palegreen';\r\n                    }, i*this.state.delay);\r\n                    timeouts.push(qq);\r\n                }\r\n                else\r\n                {\r\n                    let qq=setTimeout(() => {\r\n                        if(idx1>0&&arr_bar[ptr[idx1-1].i].style.backgroundColor==='palegreen')\r\n                        arr_bar[ptr[idx1-1].i].style.backgroundColor='blue';\r\n                        arr_bar[ptr[idx1].i].style.backgroundColor='red';\r\n                        arr_bar[ptr[idx2].i].style.backgroundColor='red';\r\n                    }, i*this.state.delay);\r\n                    timeouts.push(qq);\r\n                }\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            this.buttons(false,(animations.length)*this.state.delay);\r\n            reset=false;\r\n        }, (animations.length)*this.state.delay);\r\n        timeouts.push(qq);\r\n    }\r\n\r\n    //Selection Sort\r\n    selectionSortAnimations(){\r\n        let animations=[]\r\n        let ar=this.state.ar\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            let min=1000000001,minpos;\r\n            for(let j=i+1;j<this.state.n;j++)\r\n            {\r\n                if(min>ar[j])\r\n                {\r\n                    min=ar[j];\r\n                    minpos=j;\r\n                    animations.push({\r\n                        i:i,\r\n                        j:j,\r\n                        color:'orange'\r\n                    })\r\n                }\r\n                else{\r\n                    animations.push({\r\n                        i:i,\r\n                        j:j,\r\n                        color:'palegreen'\r\n                    })\r\n                }\r\n            }\r\n            animations.push({\r\n                i:-1,\r\n                j:0,\r\n                color:'dummy'\r\n            })\r\n            if(ar[i]>ar[minpos])\r\n            {\r\n                let temp=ar[i];\r\n                ar[i]=ar[minpos];\r\n                ar[minpos]=temp;\r\n                animations.push({\r\n                    i:i,\r\n                    j:minpos,\r\n                    color:'swap'\r\n                })\r\n            }\r\n            animations.push({\r\n                i:i,\r\n                j:-1,\r\n                color:'green'\r\n            })\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    selectionSort(){\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true,0);\r\n        const animations=this.selectionSortAnimations();\r\n        let ptr=[];\r\n        let previdx=-1;\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(idx1===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    if(arr_bar[ptr[this.state.n-1].i].style.backgroundColor==='palegreen')\r\n                    arr_bar[ptr[this.state.n-1].i].style.backgroundColor='blue';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=color1;\r\n                }, i*this.state.delay);\r\n                previdx=-1;\r\n                timeouts.push(qq);\r\n            }\r\n            else\r\n            {\r\n                if(animations[i].color==='swap')\r\n                {\r\n                    let qq=setTimeout(() => {\r\n                        ptr[idx1].ctr+=idx2-idx1;\r\n                        let y=ptr[idx1].ctr*(width+2);\r\n                        arr_bar[ptr[idx1].i].style.transform=`translateX(${y}px)`\r\n                        ptr[idx2].ctr-=idx2-idx1;\r\n                        y=ptr[idx2].ctr*(width+2);\r\n                        arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                        let tm=ptr[idx1];\r\n                        ptr[idx1]=ptr[idx2];\r\n                        ptr[idx2]=tm;\r\n                        arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                        arr_bar[ptr[idx2].i].style.backgroundColor='blue';\r\n                    }, i*this.state.delay);\r\n                    timeouts.push(qq);\r\n                }\r\n                else\r\n                {\r\n                    if(animations[i].color==='palegreen')\r\n                    {\r\n                        let qq=setTimeout(() => {\r\n                            arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                            arr_bar[ptr[idx2].i].style.backgroundColor='palegreen';\r\n                            if(arr_bar[ptr[idx2-1].i].style.backgroundColor==='palegreen')\r\n                            arr_bar[ptr[idx2-1].i].style.backgroundColor='blue';\r\n                        }, i*this.state.delay);\r\n                        timeouts.push(qq);\r\n                    }\r\n                    else\r\n                    {\r\n                        let qq=setTimeout(() => {\r\n                            arr_bar[ptr[idx1].i].style.backgroundColor='palegreen';\r\n                            if(previdx>=0&&arr_bar[previdx].style.backgroundColor==='orange')\r\n                            arr_bar[previdx].style.backgroundColor='blue';\r\n                            previdx=ptr[idx2].i;\r\n                            arr_bar[ptr[idx2].i].style.backgroundColor='orange';\r\n                            if((ptr[idx2-1].i !== ptr[idx1].i) && (arr_bar[ptr[idx2-1].i].style.backgroundColor==='palegreen' || arr_bar[ptr[idx2-1].i].style.backgroundColor==='orange'))\r\n                            arr_bar[ptr[idx2-1].i].style.backgroundColor='blue';\r\n                        }, i*this.state.delay);\r\n                        timeouts.push(qq);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            this.buttons(false,(animations.length)*this.state.delay);\r\n            reset=false;\r\n        }, (animations.length)*this.state.delay)\r\n        timeouts.push(qq);\r\n    }\r\n\r\n    //Insertion Sort\r\n    insertionSortAnimations(){\r\n        let animations=[]\r\n        let ar=this.state.ar;\r\n        for(let i=0;i<this.state.n;i++)\r\n        {\r\n            let j=i;\r\n            animations.push({\r\n                i:i,\r\n                j:-2,\r\n                color:'red'\r\n            })\r\n            while(j>0 && ar[j]<ar[j-1])\r\n            {\r\n                animations.push({\r\n                    i:j,\r\n                    j:j-1,\r\n                    color:'swap'\r\n                })\r\n                animations.push({\r\n                    i:-1,\r\n                    j:-1,\r\n                    color:'delay'\r\n                })\r\n                let temp=ar[j];\r\n                ar[j]=ar[j-1];\r\n                ar[j-1]=temp;\r\n                j--;\r\n            }\r\n            animations.push({\r\n                i:j,\r\n                j:-1,\r\n                color:'green'\r\n            })\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    insertionSort(){\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true,0);\r\n        const animations=this.insertionSortAnimations();\r\n        let ptr=[];\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(idx1===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    \r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=color1;\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(animations[i].color==='red')\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor='red';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    ptr[idx1].ctr+=idx2-idx1;\r\n                    let y=ptr[idx1].ctr*(width+2);\r\n                    arr_bar[ptr[idx1].i].style.transform=`translateX(${y}px)`\r\n                    ptr[idx2].ctr-=idx2-idx1;\r\n                    y=ptr[idx2].ctr*(width+2);\r\n                    arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                    let tm=ptr[idx1];\r\n                    ptr[idx1]=ptr[idx2];\r\n                    ptr[idx2]=tm;\r\n                    arr_bar[ptr[idx2].i].style.backgroundColor='red';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            this.buttons(false,(animations.length)*this.state.delay);\r\n            reset=false;\r\n        }, (animations.length)*this.state.delay);\r\n        timeouts.push(qq);\r\n    }\r\n\r\n    //Merge Sort\r\n    mergeSortAnimations(ar){\r\n        const animation=[]\r\n        if(ar.length===1)\r\n        return animation\r\n        this.mergeSort1(ar,0,ar.length-1,animation)\r\n        return animation\r\n    }\r\n    mergeSort1(ar,l,r,animation){\r\n        if(l<r)\r\n        {\r\n            let mid=Math.floor((l+r)/2)\r\n            this.mergeSort1(ar,l,mid,animation)\r\n            this.mergeSort1(ar,mid+1,r,animation)\r\n            this.merge(ar,l,r,mid,animation)\r\n        }\r\n    }\r\n    \r\n    merge(ar,l,r,mid,animation){\r\n        let i=l,j=mid+1,k=l\r\n        let i1=l,j1=mid+1\r\n        while(i1<=mid && j1<=r)\r\n        {\r\n            animation.push({\r\n                i:i,\r\n                j:j,\r\n                color:'palegreen'\r\n            })\r\n            if(ar[i]<=ar[j])\r\n            {\r\n                animation.push({\r\n                    i:i,\r\n                    j:j,\r\n                    color:'blue'\r\n                })\r\n                i++\r\n                k++\r\n                i1++\r\n            }\r\n            else{\r\n                animation.push({\r\n                i:k,\r\n                j:j,\r\n                color:'swap'\r\n                })\r\n                animation.push({\r\n                    i:k,\r\n                    j:j,\r\n                    color:'blue'\r\n                })\r\n                let tmp=ar[j]\r\n                for(let z=j;z>i;z--)\r\n                ar[z]=ar[z-1]\r\n                ar[i]=tmp\r\n                i++\r\n                j++\r\n                j1++\r\n                k++;\r\n            }\r\n        }\r\n        while(i<=mid)\r\n        {\r\n            animation.push({\r\n                i:i,\r\n                j:-1,\r\n                color:'palegreen'\r\n            })\r\n            animation.push({\r\n                i:i,\r\n                j:-1,\r\n                color:'blue'\r\n            })\r\n            i++;\r\n        }\r\n        while(j<=r)\r\n        {\r\n            animation.push({\r\n                i:j,\r\n                j:-1,\r\n                color:'palegreen'\r\n            })\r\n            animation.push({\r\n                i:j,\r\n                j:-1,\r\n                color:'blue'\r\n            })\r\n            j++;\r\n        }\r\n    }\r\n    mergeSort(){\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true,0);\r\n        let animations=this.mergeSortAnimations(this.state.ar);\r\n        let ptr=[];\r\n        let previdx=-1;\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        let arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=animations[i].color\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(animations[i].color==='swap')\r\n            {\r\n                let qq=setTimeout(() => {\r\n                for(let pq=idx1;pq<idx2;pq++)\r\n                {\r\n                    ptr[pq].ctr+=1\r\n                    let y=ptr[pq].ctr*(width+2);\r\n                    arr_bar[ptr[pq].i].style.transform=`translateX(${y}px)`\r\n                }\r\n                ptr[idx2].ctr-=idx2-idx1;\r\n                let y=ptr[idx2].ctr*(width+2);\r\n                arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                let pqq=ptr[idx2]\r\n                for(let pq=idx2-1;pq>=idx1;pq--)\r\n                ptr[pq+1]=ptr[pq];\r\n                ptr[idx1]=pqq\r\n                for(let it=0;it<this.state.n;it++)\r\n                if(arr_bar[it].style.backgroundColor==='palegreen')\r\n                arr_bar[it].style.backgroundColor='blue'\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=animations[i].color\r\n                    arr_bar[ptr[idx2].i].style.backgroundColor=animations[i].color\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            for(let it=0;it<this.state.n;it++)\r\n            arr_bar[it].style.backgroundColor=color1\r\n        }, animations.length*this.state.delay);\r\n        timeouts.push(qq);\r\n        qq=setTimeout(() => {\r\n            this.buttons(false,(animations.length)*this.state.delay);\r\n            reset=false;\r\n        }, (animations.length+1)*this.state.delay);\r\n        timeouts.push(qq);\r\n    }\r\n\r\n    //quick sort\r\n    quickSortAnimations(ar){\r\n        const animation=[]\r\n        this.quickSort1(ar,0,ar.length-1,animation)\r\n        return animation\r\n    }\r\n    quickSort1(ar,low,high,animation){\r\n        console.log(low+\" \"+high);    \r\n        if(low===high)\r\n            animation.push({\r\n                i:low,\r\n                j:-1,\r\n                color:color1\r\n            })\r\n            else if(low<high){\r\n                let par=this.partition(ar,low,high,animation)\r\n                animation.push({\r\n                    i:-1,\r\n                    j:-1,\r\n                    color:'clean'\r\n                })\r\n                this.quickSort1(ar,low,par-1,animation)\r\n                this.quickSort1(ar,par+1,high,animation)\r\n            }\r\n        }\r\n    partition(ar,low,high,animation){\r\n        let pivot=ar[high]\r\n        let i=low-1;\r\n        animation.push({\r\n            i:high,\r\n            j:-1,\r\n            color:'yellow'\r\n        })\r\n        for(let j=low;j<high;j++)\r\n        {\r\n            animation.push({\r\n                i:j,\r\n                j:-1,\r\n                color:'palegreen'\r\n            })\r\n            if(ar[j]<=pivot)\r\n            {\r\n                i++;\r\n                animation.push({\r\n                    i:i,\r\n                    j:j,\r\n                    color:'swap'\r\n                })\r\n                let tmp=ar[i]\r\n                ar[i]=ar[j]\r\n                ar[j]=tmp;\r\n                animation.push({\r\n                    i:i,\r\n                    j:j,\r\n                    color:'op'//op=orangepurple\r\n                })\r\n            }\r\n            else{\r\n                animation.push({\r\n                    i:j,\r\n                    j:-1,\r\n                    color:'orange'\r\n                })\r\n            }\r\n        }\r\n        animation.push({\r\n            i:i+1,\r\n            j:high,\r\n            color:'swap'\r\n        })\r\n        let tmp=ar[i+1]\r\n        ar[i+1]=ar[high]\r\n        ar[high]=tmp\r\n        animation.push({\r\n            i:i+1,\r\n            j:-1,\r\n            color:color1\r\n        })\r\n        return i+1;\r\n    }\r\n\r\n    quickSort(){\r\n        timeouts=[]\r\n        if(reset===false)\r\n        this.resetCSS();\r\n        this.buttons(true,0);\r\n        let animations=this.quickSortAnimations(this.state.ar);\r\n//        return;\r\n        let ptr=[];\r\n        for(let i=0;i<this.state.ar.length;i++)\r\n        ptr[i]={\r\n            i:i,\r\n            ctr:0\r\n        };\r\n        let len=animations.length;\r\n        const arr_bar=document.getElementsByClassName('array-bar');\r\n        for(let i=0;i<len;i++)\r\n        {\r\n            let idx1=animations[i].i;\r\n            let idx2=animations[i].j;\r\n            if(animations[i].color==='clean')\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    for(let it=0;it<this.state.n;it++)\r\n                    {\r\n                        if(arr_bar[ptr[it].i].style.backgroundColor!==color1){\r\n                        arr_bar[ptr[it].i].style.backgroundColor='blue'\r\n                        }\r\n                    }\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(idx2===-1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=animations[i].color;\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(animations[i].color==='swap')\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    ptr[idx1].ctr+=idx2-idx1;\r\n                    let y=ptr[idx1].ctr*(width+2);\r\n                    arr_bar[ptr[idx1].i].style.transform=`translateX(${y}px)`\r\n                    ptr[idx2].ctr-=idx2-idx1;\r\n                    y=ptr[idx2].ctr*(width+2);\r\n                    arr_bar[ptr[idx2].i].style.transform=`translateX(${y}px)`\r\n                    let tm=ptr[idx1];\r\n                    ptr[idx1]=ptr[idx2];\r\n                    ptr[idx2]=tm;\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq);\r\n            }\r\n            else if(animations[i].color===color1)\r\n            {\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor=color1\r\n                    for(let it=0;it<this.state.n;it++)\r\n                    {\r\n                        if(arr_bar[ptr[it].i].style.backgroundColor!==color1)\r\n                        arr_bar[ptr[it].i].style.backgroundColor='blue'\r\n                    }\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq)\r\n            }\r\n            else{\r\n                let qq=setTimeout(() => {\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor='orange';\r\n                    arr_bar[ptr[idx1].i].style.backgroundColor='purple';\r\n                }, i*this.state.delay);\r\n                timeouts.push(qq)\r\n            }\r\n        }\r\n        let qq=setTimeout(() => {\r\n            this.buttons(false,(animations.length)*this.state.delay);\r\n            reset=false;\r\n        }, (animations.length)*this.state.delay);\r\n        timeouts.push(qq);\r\n    }\r\n    render() {\r\n        let i;\r\n        for(i=1000;i>=0;i--)\r\n        {\r\n            let wdth=.8*window.innerWidth;\r\n            let n1=Math.floor(i*3.6);\r\n            let width1=Math.floor(wdth/n1)-2;\r\n            if(width1>0)\r\n            break;\r\n        }\r\n        let maxn=i;\r\n        let str,dly=this.state.delay,strdly;\r\n        if(dly===.5)\r\n        strdly='0.50'\r\n        else if(dly===.1)\r\n        strdly='0.10'\r\n        else if(dly>=1&&dly<=9)\r\n        strdly='00'+dly.toString()\r\n        else if(dly>=10&&dly<=99)\r\n        strdly='0'+dly.toString()\r\n        else strdly=dly.toString()\r\n        if(dly===1000)\r\n        strdly+='ms delay'\r\n        else strdly+=' ms delay'\r\n        let ctr1=0;\r\n         if(reset===false)\r\n        str=this.state.ar.map((x) => (\r\n            <div className=\"array-bar\" key={ctr1++ + 'e'} style={{backgroundColor: 'blue',height: `${x}px`, width:`${width}px`}}> </div>\r\n            ))\r\n        else\r\n        str=this.state.ar.map((x) => (\r\n            <div className=\"array-bar\" key={ctr1++ + 'w'} style={{backgroundColor: 'blue',height: `${x}px`, width:`${width}px`, transform:'translateX(0px)', transition:`transform ${this.state.delay}ms linear`}}> </div>\r\n            ))\r\n        return (\r\n            <div>\r\n            <div>\r\n            <h1 className=\"mainHeading\" style={{color:'black'}}>Sorting Visualizer</h1>\r\n            \r\n            <button className=\"button button4\" onClick={()=>this.bubbleSort()} id='bubblesort'>Bubble Sort</button>\r\n            <button className=\"button button4\" onClick={()=>this.selectionSort()} id='selectionsort'>Selection Sort</button>\r\n            <button className=\"button button4\" onClick={()=>this.insertionSort()} id='insertionsort'>Insertion Sort</button>\r\n            <button className=\"button button4\" onClick={()=>this.mergeSort()} id='mergesort'>Merge Sort</button>\r\n            <button className=\"button button4\" onClick={()=>this.quickSort()} id='quicksort'>Quick Sort</button>\r\n            <button className=\"button button4\" onClick={()=>this.resetArray()} id='reset'>Reset</button>\r\n            <button className=\"button button4\" onClick={()=>this.skipAnimations()} id='skip'>Skip</button>\r\n            </div>\r\n            <div>\r\n            <span><b>Data size </b></span>\r\n            \r\n            <input type=\"range\"  min={2} max={maxn} defaultValue={4} onChange={()=>this.changeArrSize()} className=\"slider\" id=\"arr_size\"/>\r\n            <span style={{backgroundColor:'gray',color:'white',borderRadius:'6px'}}> {this.state.n}&nbsp;\r\n            </span>\r\n            <span><b> Speed </b></span>\r\n            <input type=\"range\"  min={1} max={1505} defaultValue={751} onChange={()=>this.changeDelay()} className=\"slider\" id=\"delay\"/>\r\n            <span style={{backgroundColor:'gray',color:'white',borderRadius:'8px'}}> {strdly}&nbsp;</span>\r\n            <div className=\"array-container\">\r\n            { str }\r\n            </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nfunction randomIntFromInterval(min, max) {\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n\r\nexport default BubbleSort\r\n","import React, { Component } from 'react'\r\nimport {NavLink,Switch,Route,Redirect} from 'react-router-dom';\r\nimport Search from './Search';\r\nimport HomeComponent from './HomeComponent';\r\nimport Sort from './SortComponent';\r\n\r\nclass MainComponent extends Component {\r\n    render() {\r\n        const HomePage=()=>{\r\n            return(\r\n                <HomeComponent/>\r\n            )\r\n        }\r\n        return (/*\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n            <div className=\"col-3 col-md-4\"></div>\r\n            <div className=\"col-2 col-md-1\">\r\n                <NavLink to='/home' >Home</NavLink>\r\n            </div>\r\n            <div className=\"col-2 col-md-1\">\r\n                <NavLink to='/search' >Search</NavLink>\r\n            </div>\r\n            <div className=\"col-2 col-md-1\">\r\n                <NavLink to='/sort' >Sort</NavLink>\r\n            </div>*/\r\n                <Switch>\r\n                    <Route path='/Searching-Sorting-Visualizer/home' component={HomePage} />\r\n                    <Route path='/Searching-Sorting-Visualizer/search' component={Search} />\r\n                    <Route path='/Searching-Sorting-Visualizer/sort' component={Sort} />\r\n                    <Redirect to='/Searching-Sorting-Visualizer/home' />\r\n                </Switch>\r\n//            </div>\r\n//            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainComponent\r\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport MainComponent from './components/MainComponent';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <MainComponent/>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}